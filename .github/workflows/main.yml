name: CI

on: [push]

jobs:

  test-simple:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        cp -Rf test/* .
    - name: Test setup - Build the function stack and deploy it
      id: build-simple
      uses: './'
      with:
        stack-file: './simple.yml'
        docker-username: ${{ secrets.DOCKER_USERNAME }}
        docker-password: ${{ secrets.DOCKER_PASSWORD }}
        platforms: linux/amd64,linux/arm/v7
    - name: Test execution
      run: |
        export repo=mrsimpson/unit-test-simple && \
        curl -H "Authorization: Bearer $(curl -sSL "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${repo}:pull" | jq --raw-output .token)" "https://index.docker.io/v2/${repo}/manifests/${TAG}" | grep "fprocess=echo simple"
      env:
        TAG: ${{ steps.build-simple.outputs.tag }}
    - name: Login to Dockerhub
      run: |
        echo "::set-env name=DOCKER_JWT::$(curl -s -H "Content-Type: application/json" -X POST -d "{ \"username\": \"${DOCKER_USERNAME}\", \"password\": \"${DOCKER_PASSWORD}\"}" "https://hub.docker.com/v2/users/login/" | jq -r .token)"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: delete simple-image
      run: |
        curl "https://hub.docker.com/v2/repositories/mrsimpson/unit-test-simple/tags/${TAG}/" -X DELETE -H "Authorization: JWT ${DOCKER_JWT}"
      env:
        TAG: ${{ steps.build-simple.outputs.tag }}

  test-multi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        cp -Rf test/* .
    - name: Test setup - Build the function stack and deploy it
      id: build-multi
      uses: './'
      with:
        stack-file: './multi-function.yml'
        docker-username: ${{ secrets.DOCKER_USERNAME }}
        docker-password: ${{ secrets.DOCKER_PASSWORD }}
        platforms: linux/amd64
    - name: Test execution - validate first
      run: |
        export repo=mrsimpson/unit-test-first && \
        curl -H "Authorization: Bearer $(curl -sSL "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${repo}:pull" | jq --raw-output .token)" "https://index.docker.io/v2/${repo}/manifests/${TAG}" | grep "fprocess=echo first"
      env:
        TAG: ${{ steps.build-multi.outputs.tag }}
    - name: Test execution - validate second
      run: |
        export repo=mrsimpson/unit-test-second && \
        curl -H "Authorization: Bearer $(curl -sSL "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${repo}:pull" | jq --raw-output .token)" "https://index.docker.io/v2/${repo}/manifests/${TAG}" | grep "fprocess=echo second"
      env:
        TAG: ${{ steps.build-multi.outputs.tag }}
    - name: Login to Dockerhub
      run: |
        echo "::set-env name=DOCKER_JWT::$(curl -s -H "Content-Type: application/json" -X POST -d "{ \"username\": \"${DOCKER_USERNAME}\", \"password\": \"${DOCKER_PASSWORD}\"}" "https://hub.docker.com/v2/users/login/" | jq -r .token)"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: delete multi-image
      run: |
        curl "https://hub.docker.com/v2/repositories/mrsimpson/unit-test-first/tags/${TAG}/" -X DELETE -H "Authorization: JWT ${DOCKER_JWT}" && \
        curl "https://hub.docker.com/v2/repositories/mrsimpson/unit-test-second/tags/${TAG}/" -X DELETE -H "Authorization: JWT ${DOCKER_JWT}"
      env:
        TAG: ${{ steps.build-multi.outputs.tag }}

  test-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install faasd
      run: |
        sudo apt update && \
        sudo apt install -qy runc bridge-utils tmux git && \
        sudo curl -sSLf "https://github.com/openfaas/faasd/releases/download/0.8.0/faasd-arm64" --output "/usr/local/bin/faasd" && \
        sudo chmod a+x "/usr/local/bin/faasd" && \
        export GOPATH=$HOME/go/ && \
        mkdir -p $GOPATH/src/github.com/openfaas && \
        cd $GOPATH/src/github.com/openfaas && \
        git clone https://github.com/openfaas/faasd && \
        cd faasd && \
        sudo faasd install && \
        echo "::set-env name=OPENFAAS_PASSWORD::$(sudo cat /var/lib/faasd/secrets/basic-auth-password)"
    - run: |
        cp -Rf test/* .
    - name: Test setup - Build the function stack and deploy it
      id: build-simple
      uses: './'
      with:
        stack-file: './simple.yml'
        docker-username: ${{ secrets.DOCKER_USERNAME }}
        docker-password: ${{ secrets.DOCKER_PASSWORD }}
        platforms: linux/amd64
        deploy: 1
        gateway: http://localhost:8080
        openfaas-username: admin
        openfaas-password: $OPENFAAS_PASSWORD
    - name: Test execution - Check whether the function exists in OpenFaaS
      run: |
        curl http://localhost:8080/system/function/simple
  
  build-and-buffer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Determine Image
      run: |
        echo "::set-env name=IMAGE_NAME::$(echo "docker.pkg.github.com/${REPOSITORY}/action:${SHA}")"
        echo "${IMAGE_NAME}"
      env:
        REPOSITORY: ${{ github.repository }}
        SHA: ${{ github.sha	}}
    - name: Build action image
      run: |
        docker build -t ${IMAGE_NAME} .
    - name: publish to github registry
      run: |
        docker login docker.pkg.github.com -u "${GITHUB_ACTOR}" -p "${GITHUB_TOKEN}" && \
        docker push "${IMAGE_NAME}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
